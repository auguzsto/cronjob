<?php

use Auguzsto\Job\Job;
use Auguzsto\Job\Worker;
use Auguzsto\Cronjob\Cronjob;


$autoload = __DIR__ . "/../vendor/autoload.php";

if (!file_exists($autoload)) {
    $autoload = $GLOBALS['_composer_autoload_path'];
}

require_once $autoload;

if ($argv[1] == "start") {
    if (empty($_SERVER["CRONJOB_TASKS_DIR"])) {
        echo "Error: Environment variable 'CRONJOB_TASKS_DIR' is not set." . PHP_EOL;
        exit;
    }

    if (!is_dir($_SERVER["CRONJOB_TASKS_DIR"])) {
        echo "Error: Task folder not found." . PHP_EOL;
        exit;
    }

    $job = new Job(Cronjob::class, "up");
    $job->execute();
    print "All ready!" . PHP_EOL;
}

if ($argv[1] == "create") {
   if (empty($_SERVER["CRONJOB_TASKS_DIR"])) {
        echo "Error: Environment variable 'CRONJOB_TASKS_DIR' is not set." . PHP_EOL;
        exit;
    }

    if (!is_dir($_SERVER["CRONJOB_TASKS_DIR"])) {
        echo "Error: Task folder not found." . PHP_EOL;
        exit;
    }

    $dirtask = $_SERVER["CRONJOB_TASKS_DIR"];
    $name = $argv[2];
    $scalfold = <<<END
    <?php

    use Auguzsto\Cronjob\TaskInterface;
    use Auguzsto\Cronjob\SchedulerInterface;

    class $name implements TaskInterface
    {
        /**
         * Schedule
         * \$scheduler->on("* * * * *", new self);
         */
        public static function toScheduler(SchedulerInterface \$scheduler): void 
        {
        }

        /**
         * Implement the task to be performed
         */
        public static function onTask(): void
        {
        }
    }
    END;
    file_put_contents("$dirtask/$name.php", $scalfold);
}

if ($argv[1] == "stop") {
    Worker::down();
    print "All stopped!" . PHP_EOL;
}